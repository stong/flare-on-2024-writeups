p_x = 0xb3e5f89f04d49834de312110ae05f0649b3f0bbe2987304fc4ec2f46d6f036f1a897807c4e693e0bb5cd9ac8a8005f06
p_y = 0x85944d98396918741316cd0109929cb706af0cca1eaf378219c5286bdc21e979210390573e3047645e1969bdbcb667eb
x = 1305488802776637960515697387274764814560693662216913070824404729088258519836180992623611650289275235949409735080408
y = 2840284555446760004012395483787208388204705580027573689198385753943125520419959469842139003551394700125370894549378
N = 30937339651019945892244794266256713890440922455872051984762505561763526780311616863989511376879697740787911484829297
F = GF(0xc90102faa48f18b5eac1f76bb40a1b9fb0d841712bbe3e5576a7a56976c2baeca47809765283aa078583e1e65172a3fd)
a = 24699516740398840043612817898240834783822030109296416539052220535505263407290501127985941395251981432741860384780927
b = 24561086537518854907476957344600899117700350970429030091546712823181765905950742731855058586986320754303922826007424
EC = EllipticCurve(F,[a,b])
P = EC(p_x, p_y)
G = EC(x, y)
small_factors = [35809, 46027, 56369, 57301, 65063, 111659, 113111]
k_mod_p = []
for q in small_factors:
    print(f"Solving DLP modulo {q}...")
    
    Q = (N // q) * P
    G_q = (N // q) * G
    
    k_q = discrete_log(Q, G_q, q, operation='+')
    print(f"k mod {q} = {k_q}")
    k_mod_p.append((k_q, q))

remainders, moduli = zip(*k_mod_p)
k = CRT_list(list(remainders), list(moduli))
M = prod(moduli)
print(f"The discrete logarithm k is: {k} (mod {M})")


Lol = G*k
Wow = G*M
for i in range(2^18):
    if Lol == P:
        print(i)
        break
    Lol += Wow
dlog = k+M*i
assert (G*dlog==P)


mask = 0x133713371337133713371337133713371337133713371337133713371337133713371337133713371337133713371337
Px2=0xa0d2eba817e38b03cd063227bd32e353880818893ab02378d7db3c71c5c725c6bba0934b5d5e2d3ca6fa89ffbb374c31^^mask
Py2=0x96A35EAF2A5E0B430021DE361AA58F8015981FFD0D9824B50AF23B5CCF16FA4E323483602D0754534D2E7A8AAF8174DC^^mask
P_remote = EC(Px2,Py2)
P_shared = P_remote * dlog
# 0x3c54f90f4d2cc9c0b62df2866c2b4f0c5afae8136d2a1e76d2694999624325f5609c50b4677efa21a37664b50cec92c0
# 0x2793143a038955091171acdcb93bb5b369980f1655c6edcdf5476ed12b5f08465637e6536dd63346aabaf7efb64be82