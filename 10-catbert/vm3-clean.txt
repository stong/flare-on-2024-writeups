=== Test Disassembly ===
0000:  01 00 00    mem[0x0000] = 0xBBAA
0007:  01 00 01    mem[0x0001] = 0xDDCC
000E:  01 00 02    mem[0x0002] = 0xFFEE
0015:  01 00 03    mem[0x0003] = 0xADDE
001C:  01 00 04    mem[0x0004] = 0xEFBE
0023:  01 00 05    mem[0x0005] = 0xFECA
002A:  01 00 06    mem[0x0006] = 0xBEBA
0031:  01 00 07    mem[0x0007] = 0xCDAB
0038:  01 00 08    mem[0x0008] = ((((mem[0x0003] << 0x0030) | (mem[0x0002] << 0x0020)) | (mem[0x0001] << 0x0010)) | mem[0x0000])
005B:  01 00 09    mem[0x0009] = ((((mem[0x0007] << 0x0030) | (mem[0x0006] << 0x0020)) | (mem[0x0005] << 0x0010)) | mem[0x0004])
007E:  01 00 1E    mem[0x001E] = 0xFFFF
0085:  01 00 1D    mem[0x001D] = mem[0x001E]
008D:  01 00 1E    mem[0x001E] = ((mem[0x001E] << 0x0010) | mem[0x001D])
009E:  01 00 1B    mem[0x001B] = 0x0000
00A5:  01 00 1F    mem[0x001F] = 0x0000
00AC:  01 00 20    mem[0x0020] = 0x0000

00B3:  01 00 13    mem[0x0013] = 0x1505
00BA:  01 00 1B    PUSH (mem[0x001B] < 0x0004)
00C2:  10 01 0F    JZ 0x010F
00C5:  01 00 1C    mem[0x001C] = (mem[0x0008] >> (0x0008 * mem[0x001B]))
00D6:  01 00 1C    mem[0x001C] = (mem[0x001C] & 0x00FF)
00E2:  01 00 1D    mem[0x001D] = mem[0x0013]
00EA:  01 00 13    mem[0x0013] = (((mem[0x0013] << 0x0005) + mem[0x001D]) + mem[0x001C])
0100:  01 00 1B    mem[0x001B] = (mem[0x001B] + 0x0001)
010C:  0E 00 BA    JMP 0x00BA
010F:  01 00 13    mem[0x0013] = (mem[0x0013] & mem[0x001E])
011C:  01 00 14    mem[0x0014] = ((0x7C8D << 0x0010) | 0xF4CB)
012B:  01 00 14    PUSH (mem[0x0014] == mem[0x0013])
0134:  10 01 43    JZ 0x0143
0137:  01 00 1F    mem[0x001F] = (mem[0x001F] + 0x0001)
0143:  01 00 1F    PUSH (mem[0x001F] > 0x0000)
014B:  10 01 D9    JZ 0x01D9



014E:  01 00 15    mem[0x0015] = 0x0000
0155:  01 00 1B    PUSH (mem[0x001B] < 0x0008)
015D:  10 01 A5    JZ 0x01A5
0160:  01 00 1C    mem[0x001C] = (mem[0x0008] >> (0x0008 * mem[0x001B]))
0171:  01 00 1C    mem[0x001C] = (mem[0x001C] & 0x00FF)
017D:  01 00 15    mem[0x0015] = (mem[0x0015] ROR32 0x000D)
0189:  01 00 15    mem[0x0015] = (mem[0x0015] + mem[0x001C])
0196:  01 00 1B    mem[0x001B] = (mem[0x001B] + 0x0001)
01A2:  0E 01 55    JMP 0x0155
01A5:  01 00 15    mem[0x0015] = (mem[0x0015] & mem[0x001E])
01B2:  01 00 16    mem[0x0016] = ((0x8B68 << 0x0010) | 0x1D82)
01C1:  01 00 16    PUSH (mem[0x0016] == mem[0x0015])
01CA:  10 01 D9    JZ 0x01D9
01CD:  01 00 1F    mem[0x001F] = (mem[0x001F] + 0x0001)
01D9:  01 00 1F    PUSH (mem[0x001F] > 0x0001)
01E1:  10 02 9E    JZ 0x029E





01E4:  01 00 11    mem[0x0011] = 0x0001
01EB:  01 00 12    mem[0x0012] = 0x0000
01F2:  01 00 17    mem[0x0017] = 0x0000
01F9:  01 00 1B    mem[0x001B] = 0x0000
0200:  01 00 1B    PUSH (mem[0x001B] < 0x0008)
0208:  10 02 59    JZ 0x0259
020B:  01 00 1C    mem[0x001C] = (mem[0x0009] >> (0x0008 * mem[0x001B]))
021C:  01 00 1C    mem[0x001C] = (mem[0x001C] & 0x00FF)
0228:  01 00 11    mem[0x0011] = ((mem[0x0011] + mem[0x001C]) % 0xFFF1)
0239:  01 00 12    mem[0x0012] = ((mem[0x0012] + mem[0x0011]) % 0xFFF1)
024A:  01 00 1B    mem[0x001B] = (mem[0x001B] + 0x0001)
0256:  0E 02 00    JMP 0x0200
0259:  01 00 17    mem[0x0017] = ((mem[0x0012] << 0x0010) | mem[0x0011])
026A:  01 00 17    mem[0x0017] = (mem[0x0017] & mem[0x001E])
0277:  01 00 18    mem[0x0018] = ((0x0F91 << 0x0010) | 0x0374)
0286:  01 00 18    PUSH (mem[0x0018] == mem[0x0017])
028F:  10 02 9E    JZ 0x029E
0292:  01 00 1F    mem[0x001F] = (mem[0x001F] + 0x0001)
029E:  01 00 1F    PUSH (mem[0x001F] > 0x0002)
02A6:  10 03 B2    JZ 0x03B2


02A9:  01 00 0A    mem[0x000A] = 0x0193
02B0:  01 00 0B    mem[0x000B] = 0x0100
02B7:  01 00 0C    mem[0x000C] = ((mem[0x000B] << 0x0010) | mem[0x000A])
02C8:  01 00 0D    mem[0x000D] = 0x9DC5
02CF:  01 00 0E    mem[0x000E] = 0x811C
02D6:  01 00 0F    mem[0x000F] = ((mem[0x000E] << 0x0010) | mem[0x000D])
02E7:  01 00 10    mem[0x0010] = (0x0001 << 0x0020)
02F2:  01 00 19    mem[0x0019] = mem[0x000F]
02FA:  01 00 1B    mem[0x001B] = 0x0000
0301:  01 00 1B    PUSH (mem[0x001B] < 0x0010)
0309:  10 03 7E    JZ 0x037E
030C:  01 00 1B    PUSH (mem[0x001B] < 0x0008)
0314:  10 03 28    JZ 0x0328
0317:  01 00 1C    mem[0x001C] = (mem[0x0008] >> (0x0008 * mem[0x001B]))
0328:  01 00 1B    PUSH (mem[0x001B] > 0x0007)
0330:  10 03 44    JZ 0x0344
0333:  01 00 1C    mem[0x001C] = (mem[0x0009] >> (0x0008 * mem[0x001B]))
0344:  01 00 1C    mem[0x001C] = (mem[0x001C] & 0x00FF)
0350:  01 00 19    mem[0x0019] = ((mem[0x0019] * mem[0x000C]) % mem[0x0010])
0362:  01 00 19    mem[0x0019] = (mem[0x0019] ^ mem[0x001C])
036F:  01 00 1B    mem[0x001B] = (mem[0x001B] + 0x0001)
037B:  0E 03 01    JMP 0x0301
037E:  01 00 19    mem[0x0019] = (mem[0x0019] & mem[0x001E])
038B:  01 00 1A    mem[0x001A] = ((0x31F0 << 0x0010) | 0x09D2)
039A:  01 00 1A    PUSH (mem[0x001A] == mem[0x0019])
03A3:  10 03 B2    JZ 0x03B2
03A6:  01 00 1F    mem[0x001F] = (mem[0x001F] + 0x0001)
03B2:  01 00 1F    PUSH (mem[0x001F] == 0x0004)
03BA:  10 03 C4    JZ 0x03C4
03BD:  01 00 20    mem[0x0020] = 0x0001
03C4:  01 00 20    PUSH mem[0x0020]
03C8:  19          EXIT_0
03C9:  18          NOP