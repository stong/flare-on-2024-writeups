0000:  01 00 00    mem[0x0000] = 0xBBAA
0007:  01 00 01    mem[0x0001] = 0xDDCC
000E:  01 00 02    mem[0x0002] = 0xFFEE
0015:  01 00 03    mem[0x0003] = 0xADDE
001C:  01 00 04    mem[0x0004] = 0xEFBE
0023:  01 00 05    mem[0x0005] = 0xFECA
002A:  01 00 06    mem[0x0006] = 0xBEBA
0031:  01 00 07    mem[0x0007] = 0xCDAB
0038:  01 00 0A    mem[0x000A] = 0xA059
003F:  01 00 0B    mem[0x000B] = 0x6A4D
0046:  01 00 0C    mem[0x000C] = 0xDE23
004D:  01 00 0D    mem[0x000D] = 0x24C0
0054:  01 00 0E    mem[0x000E] = 0x64E2
005B:  01 00 0F    mem[0x000F] = 0x59B1
0062:  01 00 10    mem[0x0010] = 0x7207
0069:  01 00 11    mem[0x0011] = 0x7F5C
0070:  01 00 08    mem[0x0008] = ((((mem[0x0003] << 0x0030) | (mem[0x0002] << 0x0020)) | (mem[0x0001] << 0x0010)) | mem[0x0000])
0093:  01 00 09    mem[0x0009] = ((((mem[0x0007] << 0x0030) | (mem[0x0006] << 0x0020)) | (mem[0x0005] << 0x0010)) | mem[0x0004])
00B6:  01 00 12    mem[0x0012] = ((((mem[0x000D] << 0x0030) | (mem[0x000C] << 0x0020)) | (mem[0x000B] << 0x0010)) | mem[0x000A])
00D9:  01 00 13    mem[0x0013] = ((((mem[0x0011] << 0x0030) | (mem[0x0010] << 0x0020)) | (mem[0x000F] << 0x0010)) | mem[0x000E])
00FC:  01 00 14    mem[0x0014] = 0x0000
0103:  01 00 15    mem[0x0015] = 0x0001
010A:  01 00 16    mem[0x0016] = 0x0000
0111:  01 00 17    mem[0x0017] = 0x0000
0118:  01 00 1C    mem[0x001C] = (0x43FD | (0x0003 << 0x0010))
0127:  01 00 1D    mem[0x001D] = (0x9EC3 | (0x0026 << 0x0010))
0136:  01 00 1B    mem[0x001B] = (0x0001 << 0x001F)
0141:  01 00 1E    mem[0x001E] = 0x1337
0148:  01 00 15    PUSH (mem[0x0015] == 0x0001)
0150:  10 02 62    JZ 0x0262
0153:  01 00 14    PUSH (mem[0x0014] < 0x0008)
015B:  10 01 80    JZ 0x0180
015E:  01 00 18    mem[0x0018] = (mem[0x0008] >> (0x0008 * mem[0x0014]))
016F:  01 00 19    mem[0x0019] = (mem[0x0012] >> (0x0008 * mem[0x0014]))
0180:  01 00 14    PUSH (mem[0x0014] > 0x0007)
0188:  10 01 AD    JZ 0x01AD
018B:  01 00 18    mem[0x0018] = (mem[0x0009] >> (0x0008 * mem[0x0014]))
019C:  01 00 19    mem[0x0019] = (mem[0x0013] >> (0x0008 * mem[0x0014]))
01AD:  01 00 18    mem[0x0018] = (mem[0x0018] & 0x00FF)
01B9:  01 00 19    mem[0x0019] = (mem[0x0019] & 0x00FF)
01C5:  01 00 1E    mem[0x001E] = (((mem[0x001C] * mem[0x001E]) + mem[0x001D]) % mem[0x001B])
01DC:  01 00 1A    mem[0x001A] = mem[0x001E]
01E4:  01 00 1A    mem[0x001A] = (mem[0x001E] >> (0x0008 * (mem[0x0014] % 0x0004)))
01F9:  01 00 1F    mem[0x001F] = (mem[0x001A] & 0x00FF)
0205:  01 00 20    mem[0x0020] = (mem[0x0018] ^ mem[0x001F])
0212:  01 00 20    PUSH ((mem[0x0020] == mem[0x0019]) == 0x0000)
021F:  10 02 29    JZ 0x0229
0222:  01 00 15    mem[0x0015] = 0x0000
0229:  01 00 20    PUSH (mem[0x0020] == mem[0x0019])
0232:  10 02 41    JZ 0x0241
0235:  01 00 16    mem[0x0016] = (mem[0x0016] + 0x0001)
0241:  01 00 14    mem[0x0014] = (mem[0x0014] + 0x0001)
024D:  01 00 14    PUSH (mem[0x0014] > 0x000F)
0255:  10 02 5F    JZ 0x025F
0258:  01 00 15    mem[0x0015] = 0x0000
025F:  0E 01 48    JMP 0x0148
0262:  01 00 16    PUSH (mem[0x0016] == 0x0010)
026A:  10 02 74    JZ 0x0274
026D:  01 00 17    mem[0x0017] = 0x0001
0274:  01 00 16    PUSH ((mem[0x0016] == 0x0010) == 0x0000)
0280:  10 02 8A    JZ 0x028A
0283:  01 00 17    mem[0x0017] = 0x0000
028A:  01 00 17    PUSH mem[0x0017]
028E:  19          EXIT_0
028F:  18          NOP